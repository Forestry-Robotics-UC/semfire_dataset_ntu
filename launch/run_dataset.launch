<?xml version="1.0"?>
<launch>

	<!-- GLOBAL TIME PARAM FOR ROSBAG PLAY  -->
	<param name="use_sim_time" value="true" />

	<!--Argument to use odom/loc -->
	<arg name="with_odom_and_loc" default="false" />

	<!-- PLAY DATASET WITH AN ODOM AND LOCALIZATION SOURCE (for Vinitha and Sreedevi) -->
	<group if="$(arg with_odom_and_loc)"> 
    	<node pkg="rosbag" type="play" name="rosbag_play" args="$(find semfire_dataset_ntu)/dataset/2019_11_15_raw_data.bag $(find semfire_dataset_ntu)/dataset/odom_and_localization.bag --clock --pause -r 1" output="screen"/>
    </group>

    <!-- PLAY DATASET WITHOUT ODOM AND LOCALIZATION (for Rahel and Alagappan) -->
	<group unless="$(arg with_odom_and_loc)"> 
        <node pkg="rosbag" type="play" name="rosbag_play" args="$(find semfire_dataset_ntu)/dataset/2019_11_15_raw_data.bag --clock --pause -r 1" output="screen"/>
    </group>


    <!-- GET THE BACK LIDAR DATA POINTCLOUD  -->
    <node pkg="lslidar_c16_decoder" type="lslidar_c16_decoder_node" name="back_lslidar_c16_decoder_node"> <!--output="screen"-->
	    <param name="child_frame_id" value="back_lslidar"/>
	    <param name="point_num" value="2000"/>
	    <param name="channel_num" value="8"/>
	    <param name="angle_disable_min" value="0"/>
	    <param name="angle_disable_max" value="0"/>
	    <param name="min_range" value="0.15"/>
	    <param name="max_range" value="150.0"/>
	    <param name="frequency" value="10.0"/>
	    <param name="publish_point_cloud" value="true"/>
	    <param name="publish_channels" value="false"/>
	    <param name="use_gps_ts" value="false"/>

	    <!--output topic remapping for the greater scheme of things -->
	    <remap from="scan"           to="back_lslidar_scan"/>
	    <remap from="scan_channel"   to="back_lslidar_scan_channel"/>
	    <remap from="layer_num"      to="back_lslidar_layer_num"/>
	    <remap from="lslidar_packet" to="back_lslidar_packet"/>
	    <remap from="lslidar_sweep"  to="back_lslidar_sweep"/>
	    <remap from="lslidar_point_cloud" to="back_lslidar_point_cloud_with_noise"/>
    </node>

    <!-- GET THE FRONT LIDAR DATA POINTCLOUD  -->
    <node pkg="lslidar_c16_decoder" type="lslidar_c16_decoder_node" name="front_lslidar_c16_decoder_node"> <!--output="screen"-->
	    <param name="child_frame_id" value="front_lslidar"/>
	    <param name="point_num" value="2000"/>
	    <param name="channel_num" value="8"/>
	    <param name="angle_disable_min" value="0"/>
	    <param name="angle_disable_max" value="0"/>
	    <param name="min_range" value="0.15"/>
	    <param name="max_range" value="150.0"/>
	    <param name="frequency" value="10.0"/>
	    <param name="publish_point_cloud" value="true"/>
	    <param name="publish_channels" value="false"/>
	    <param name="use_gps_ts" value="false"/>

	    <!--output topic remapping for the greater scheme of things -->
	    <remap from="scan"           to="front_lslidar_scan"/>
	    <remap from="scan_channel"   to="front_lslidar_scan_channel"/>
	    <remap from="layer_num"      to="front_lslidar_layer_num"/>
	    <remap from="lslidar_packet" to="front_lslidar_packet"/>  
	    <remap from="lslidar_sweep"  to="front_lslidar_sweep"/>
	    <remap from="lslidar_point_cloud" to="front_lslidar_point_cloud"/>	    
	</node>

    <!--display the bobcat (the dataset has an initial /tf_static with all the base tfs-->
    <include file="$(find semfire_dataset_ntu)/launch/display_semfire_bobcat.launch"/>

    <!-- launch rviz with custom profile-->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find semfire_dataset_ntu)/rviz/ranger_dataset.rviz" output="screen"/>


    <!-- Publish the static TFs that we need (realsense and imu) -->
    <node pkg="tf" type="static_transform_publisher" name="tf_static_realsense_link_to_depth" args="0 0 0 0 0 0 1 realsense_link realsense_depth_frame 10" />

    <node pkg="tf" type="static_transform_publisher" name="tf_static_realsense_depth_to_optical" args="0 0 0 -0.5 0.5 -0.5 0.5 realsense_depth_frame realsense_depth_optical_frame 10" />

    <node pkg="tf" type="static_transform_publisher" name="tf_static_realsense_link_to_aligned_frame" args="-0.001 0.015 0.0 0.004 -0.001 0.002 1.0 realsense_link realsense_aligned_depth_to_color_frame 10" />

    <node pkg="tf" type="static_transform_publisher" name="tf_static_realsense_aligned_to_color_optical" args="0 0 0 -0.5 0.5 -0.5 0.5 realsense_aligned_depth_to_color_frame realsense_color_optical_frame 10" />

    <!--static tf IMU mounted on bobcat -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_imu" args="0.15 0 2.2 0 -1.42640673352 0 /bobcat_base /imu_link 10" /> <!-- 1.71518592 -->

    <!--static tf gps mounted on bobcat -->
	<node pkg="tf" type="static_transform_publisher" name="base_to_gps" args="0.0 0 2.0 0 0 0 /bobcat_base /gps 100" />



  <!-- Filter the robot structure on the back lslidar points with a "crop box" -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <node pkg="nodelet" type="nodelet" name="crop_box" args="load pcl/CropBox pcl_manager" output="screen">
        <remap from="~input" to="back_lslidar_point_cloud_with_noise" />
        <remap from="~output" to="back_lslidar_point_cloud" />
        <rosparam>
              min_x: -2.5
              max_x: 0.0
              min_y: -1.0
              max_y: 1.0
              min_z: -1.25
              max_z: 1.0
              keep_organized: true
              negative: true
        </rosparam>
   </node>

   <!--Intel RealSense Colored PointCloud-->

   <!--republish compressed images into raw images readable by the point_cloud_xyzrgb nodelet-->
   <node pkg="image_transport" type="republish" name="repub_image_rect_color" args="compressed in:=realsense/color/image_raw raw out:=realsense/color/image_raw"/>

   <!-- Get RGBD registered Point Cloud from Intel -->
   <node pkg="nodelet" type="nodelet" name="realsense_colored_pcl" args="manager" output="screen" /> 
 
   <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load depth_image_proc/point_cloud_xyzrgb realsense_colored_pcl --no-bond"> 
	    <remap from="rgb/camera_info" to="realsense/color/camera_info" />   
	    <remap from="rgb/image_rect_color" to="realsense/color/image_raw"/> 
	    <remap from="depth_registered/image_rect" to="realsense/aligned_depth_to_color/image_raw"/>
	    <remap from="depth_registered/points" to="realsense/depth/color/points"/>
	  </node>

</launch>

